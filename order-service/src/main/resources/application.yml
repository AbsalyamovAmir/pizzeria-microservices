server:
  port: 8080
  servlet:
    context-path: /order-service

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:pizza_orders}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:0000}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      connection-timeout: 5000
  jpa:
    hibernate:
      ddl-auto: validate

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: order-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      order-events: order-events
      order-created: order-created
      payment-events: payment-events
      kitchen-events: kitchen-events
      delivery-events: delivery-events
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
    enabled: true

services:
  kitchen:
    url: ${KITCHEN_SERVICE_URL:http://localhost:8081}
    timeout: 5000
  delivery:
    url: ${DELIVERY_SERVICE_URL:http://localhost:8082}
    timeout: 5000
  payment:
    url: ${PAYMENT_SERVICE_URL:http://localhost:8083}
    timeout: 5000

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    com.pizzeria.orderservice: DEBUG
  file:
    name: logs/order-service.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"